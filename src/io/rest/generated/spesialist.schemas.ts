/**
 * Generated by orval v7.13.2 üç∫
 * Do not edit manually.
 * API
 * OpenAPI spec version: latest
 */
export interface AktivSaksbehandler {
    navn: string;
    ident: string;
    oid: string;
}

export type OppgaveSorteringsfelt = (typeof OppgaveSorteringsfelt)[keyof typeof OppgaveSorteringsfelt];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OppgaveSorteringsfelt = {
    tildeling: 'tildeling',
    opprettetTidspunkt: 'opprettetTidspunkt',
    opprinneligSoeknadstidspunkt: 'opprinneligSoeknadstidspunkt',
    paVentInfo_tidsfrist: 'paVentInfo_tidsfrist',
} as const;

export type Sorteringsrekkef√∏lge = (typeof Sorteringsrekkef√∏lge)[keyof typeof Sorteringsrekkef√∏lge];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Sorteringsrekkef√∏lge = {
    STIGENDE: 'STIGENDE',
    SYNKENDE: 'SYNKENDE',
} as const;

export type OppgaveProjeksjonTildeling = null | Tildeling;

export type OppgaveProjeksjonPaVentInfo = null | OppgaveProjeksjonPaaVentInfo;

export interface OppgaveProjeksjon {
    id: string;
    aktorId: string;
    navn: Personnavn;
    egenskaper: ApiEgenskap[];
    tildeling?: OppgaveProjeksjonTildeling;
    opprettetTidspunkt: string;
    opprinneligSoeknadstidspunkt: string;
    paVentInfo?: OppgaveProjeksjonPaVentInfo;
}

export type PersonnavnMellomnavn = null | string;

export interface Personnavn {
    fornavn: string;
    etternavn: string;
    mellomnavn?: PersonnavnMellomnavn;
}

export type ApiEgenskap = (typeof ApiEgenskap)[keyof typeof ApiEgenskap];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ApiEgenskap = {
    RISK_QA: 'RISK_QA',
    FORTROLIG_ADRESSE: 'FORTROLIG_ADRESSE',
    STRENGT_FORTROLIG_ADRESSE: 'STRENGT_FORTROLIG_ADRESSE',
    EGEN_ANSATT: 'EGEN_ANSATT',
    BESLUTTER: 'BESLUTTER',
    SPESIALSAK: 'SPESIALSAK',
    REVURDERING: 'REVURDERING',
    SOKNAD: 'SOKNAD',
    STIKKPROVE: 'STIKKPROVE',
    UTBETALING_TIL_SYKMELDT: 'UTBETALING_TIL_SYKMELDT',
    DELVIS_REFUSJON: 'DELVIS_REFUSJON',
    UTBETALING_TIL_ARBEIDSGIVER: 'UTBETALING_TIL_ARBEIDSGIVER',
    INGEN_UTBETALING: 'INGEN_UTBETALING',
    EN_ARBEIDSGIVER: 'EN_ARBEIDSGIVER',
    FLERE_ARBEIDSGIVERE: 'FLERE_ARBEIDSGIVERE',
    FORLENGELSE: 'FORLENGELSE',
    FORSTEGANGSBEHANDLING: 'FORSTEGANGSBEHANDLING',
    INFOTRYGDFORLENGELSE: 'INFOTRYGDFORLENGELSE',
    OVERGANG_FRA_IT: 'OVERGANG_FRA_IT',
    UTLAND: 'UTLAND',
    HASTER: 'HASTER',
    RETUR: 'RETUR',
    VERGEMAL: 'VERGEMAL',
    SKJONNSFASTSETTELSE: 'SKJONNSFASTSETTELSE',
    PA_VENT: 'PA_VENT',
    TILBAKEDATERT: 'TILBAKEDATERT',
    GOSYS: 'GOSYS',
    MANGLER_IM: 'MANGLER_IM',
    MEDLEMSKAP: 'MEDLEMSKAP',
    GRUNNBELOPSREGULERING: 'GRUNNBELOPSREGULERING',
    SELVSTENDIG_NAERINGSDRIVENDE: 'SELVSTENDIG_NAERINGSDRIVENDE',
    ARBEIDSTAKER: 'ARBEIDSTAKER',
} as const;

export interface Tildeling {
    navn: string;
    epost: string;
    oid: string;
}

export type OppgaveProjeksjonPaaVentInfoTekst = null | string;

export interface OppgaveProjeksjonPaaVentInfo {
    arsaker: string[];
    tekst?: OppgaveProjeksjonPaaVentInfoTekst;
    dialogRef: number;
    saksbehandler: string;
    opprettet: string;
    tidsfrist: string;
    kommentarer: OppgaveProjeksjonPaaVentInfoKommentar[];
}

export type OppgaveProjeksjonPaaVentInfoKommentarFeilregistrertTidspunkt = null | string;

export interface OppgaveProjeksjonPaaVentInfoKommentar {
    id: number;
    tekst: string;
    opprettet: string;
    saksbehandlerident: string;
    feilregistrert_tidspunkt?: OppgaveProjeksjonPaaVentInfoKommentarFeilregistrertTidspunkt;
}

export interface OppgaveProjeksjonSide {
    totaltAntall: number;
    sidetall: number;
    sidestoerrelse: number;
    elementer: OppgaveProjeksjon[];
}

export interface OpphevStansRequest {
    fodselsnummer: string;
    begrunnelse: string;
}

export interface TilkommenInntektskilde {
    organisasjonsnummer: string;
    inntekter: TilkommenInntekt[];
}

export interface TilkommenInntekt {
    tilkommenInntektId: string;
    periode: DatoPeriode;
    periodebelop: string;
    ekskluderteUkedager: string[];
    fjernet: boolean;
    erDelAvAktivTotrinnsvurdering: boolean;
    events: TilkommenInntektEvent[];
}

export interface DatoPeriode {
    fom: string;
    tom: string;
}

export type TilkommenInntektEvent =
    | TilkommenInntektEndretEvent
    | TilkommenInntektFjernetEvent
    | TilkommenInntektGjenopprettetEvent
    | TilkommenInntektOpprettetEvent;

export interface TilkommenInntektEndretEvent {
    metadata: TilkommenInntektEventMetadata;
    endringer: TilkommenInntektEventEndringer;
}

export interface TilkommenInntektEventMetadata {
    sekvensnummer: number;
    tidspunkt: string;
    utfortAvSaksbehandlerIdent: string;
    notatTilBeslutter: string;
}

export type TilkommenInntektEventEndringerOrganisasjonsnummer = null | TilkommenInntektEventEndringerStringEndring;

export type TilkommenInntektEventEndringerPeriode = null | TilkommenInntektEventEndringerDatoPeriodeEndring;

export type TilkommenInntektEventEndringerPeriodebelop = null | TilkommenInntektEventEndringerBigDecimalEndring;

export type TilkommenInntektEventEndringerEkskluderteUkedager =
    null | TilkommenInntektEventEndringerListLocalDateEndring;

export interface TilkommenInntektEventEndringer {
    organisasjonsnummer?: TilkommenInntektEventEndringerOrganisasjonsnummer;
    periode?: TilkommenInntektEventEndringerPeriode;
    periodebelop?: TilkommenInntektEventEndringerPeriodebelop;
    ekskluderteUkedager?: TilkommenInntektEventEndringerEkskluderteUkedager;
}

export interface TilkommenInntektEventEndringerStringEndring {
    fra: string;
    til: string;
}

export interface TilkommenInntektEventEndringerDatoPeriodeEndring {
    fra: DatoPeriode;
    til: DatoPeriode;
}

export interface TilkommenInntektEventEndringerBigDecimalEndring {
    fra: string;
    til: string;
}

export interface TilkommenInntektEventEndringerListLocalDateEndring {
    fra: string[];
    til: string[];
}

export interface TilkommenInntektFjernetEvent {
    metadata: TilkommenInntektEventMetadata;
}

export interface TilkommenInntektGjenopprettetEvent {
    metadata: TilkommenInntektEventMetadata;
    endringer: TilkommenInntektEventEndringer;
}

export interface TilkommenInntektOpprettetEvent {
    metadata: TilkommenInntektEventMetadata;
    organisasjonsnummer: string;
    periode: DatoPeriode;
    periodebelop: string;
    ekskluderteUkedager: string[];
}

export interface TilkommenInntektInput {
    organisasjonsnummer: string;
    periode: DatoPeriode;
    periodebelop: string;
    ekskluderteUkedager: string[];
}

export interface LeggTilTilkommenInntektRequest {
    fodselsnummer: string;
    verdier: TilkommenInntektInput;
    notatTilBeslutter: string;
}

export interface LeggTilTilkommenInntektResponse {
    tilkommenInntektId: string;
}

export interface EndreTilkommenInntektRequest {
    endretTil: TilkommenInntektInput;
    notatTilBeslutter: string;
}

export interface FjernTilkommenInntektRequest {
    notatTilBeslutter: string;
}

export interface GjenopprettTilkommenInntektRequest {
    endretTil: TilkommenInntektInput;
    notatTilBeslutter: string;
}

export type GetOppgaverParams = {
    minstEnAvEgenskapene?: string[];
    ingenAvEgenskapene?: string;
    erTildelt?: boolean;
    tildeltTilOid?: string;
    erPaaVent?: boolean;
    sorteringsfelt?: OppgaveSorteringsfelt;
    sorteringsrekkefoelge?: Sorteringsrekkef√∏lge;
    sidetall?: number;
    sidestoerrelse?: number;
};

scalar BigDecimal

scalar Instant

scalar LocalDate

scalar LocalDateTime

scalar Long

scalar UUID

enum Egenskap {
    ARBEIDSTAKER
    BESLUTTER
    DELVIS_REFUSJON
    EGEN_ANSATT
    EN_ARBEIDSGIVER
    FLERE_ARBEIDSGIVERE
    FORLENGELSE
    FORSTEGANGSBEHANDLING
    FORTROLIG_ADRESSE
    GOSYS
    GRUNNBELOPSREGULERING
    HASTER
    INFOTRYGDFORLENGELSE
    INGEN_UTBETALING
    MANGLER_IM
    MEDLEMSKAP
    OVERGANG_FRA_IT
    PA_VENT
    RETUR
    REVURDERING
    RISK_QA
    SELVSTENDIG_NAERINGSDRIVENDE
    SKJONNSFASTSETTELSE
    SOKNAD
    SPESIALSAK
    STIKKPROVE
    STRENGT_FORTROLIG_ADRESSE
    TILBAKEDATERT
    UTBETALING_TIL_ARBEIDSGIVER
    UTBETALING_TIL_SYKMELDT
    UTLAND
    VERGEMAL
}

enum OppgaveSorteringsfelt {
    opprettetTidspunkt
    opprinneligSoeknadstidspunkt
    paVentInfo_tidsfrist
    tildeling
}

enum Sorteringsrekkefolge {
    STIGENDE
    SYNKENDE
}

input DatoPeriodeInput {
    fom: LocalDate!
    tom: LocalDate!
}

input PostOpphevStansRequestBody {
    begrunnelse: String!
    fodselsnummer: String!
}

input PostTilkommenInntektEndreRequestBody {
    endretTil: TilkommenInntektInput!
    notatTilBeslutter: String!
}

input PostTilkommenInntektFjernRequestBody {
    notatTilBeslutter: String!
}

input PostTilkommenInntektGjenopprettRequestBody {
    endretTil: TilkommenInntektInput!
    notatTilBeslutter: String!
}

input PostTilkomneInntekterRequestBody {
    fodselsnummer: String!
    notatTilBeslutter: String!
    verdier: TilkommenInntektInput!
}

input TilkommenInntektInput {
    ekskluderteUkedager: [LocalDate!]!
    organisasjonsnummer: String!
    periode: DatoPeriodeInput!
    periodebelop: BigDecimal!
}

type AktivSaksbehandler {
    ident: String!
    navn: String!
    oid: UUID!
}

type DatoPeriode {
    fom: LocalDate!
    tom: LocalDate!
}

type LeggTilTilkommenInntektResponse {
    tilkommenInntektId: UUID!
}

type OppgaveProjeksjon {
    aktorId: String!
    egenskaper: [Egenskap!]!
    id: String!
    navn: Personnavn!
    opprettetTidspunkt: Instant!
    opprinneligSoeknadstidspunkt: Instant!
    paVentInfo: OppgaveProjeksjonPaaVent
    tildeling: Tildeling
}

type OppgaveProjeksjonPaaVent {
    arsaker: [String!]!
    dialogRef: Long!
    kommentarer: [OppgaveProjeksjonPaaVentKommentar!]!
    opprettet: LocalDateTime!
    saksbehandler: String!
    tekst: String
    tidsfrist: LocalDate!
}

type OppgaveProjeksjonPaaVentKommentar {
    feilregistrert_tidspunkt: LocalDateTime
    id: Int!
    opprettet: LocalDateTime!
    saksbehandlerident: String!
    tekst: String!
}

type OppgaveProjeksjonSide {
    elementer: [OppgaveProjeksjon!]!
    sidestoerrelse: Int!
    sidetall: Int!
    totaltAntall: Long!
    totaltAntallSider: Long!
}

type Personnavn {
    etternavn: String!
    fornavn: String!
    mellomnavn: String
}

type Tildeling {
    epost: String!
    navn: String!
    oid: UUID!
}

type TilkommenInntekt {
    ekskluderteUkedager: [LocalDate!]!
    erDelAvAktivTotrinnsvurdering: Boolean!
    events: [TilkommenInntektEvent!]!
    fjernet: Boolean!
    periode: DatoPeriode!
    periodebelop: BigDecimal!
    tilkommenInntektId: UUID!
}

type TilkommenInntektEndretEvent implements TilkommenInntektEvent {
    endringer: TilkommenInntektEventEndringer!
    metadata: TilkommenInntektEventMetadata!
}

interface TilkommenInntektEvent {
    metadata: TilkommenInntektEventMetadata!
}

type TilkommenInntektEventEndringer {
    ekskluderteUkedager: TilkommenInntektEventEndringerListLocalDateEndring
    organisasjonsnummer: TilkommenInntektEventEndringerStringEndring
    periode: TilkommenInntektEventEndringerDatoPeriodeEndring
    periodebelop: TilkommenInntektEventEndringerBigDecimalEndring
}

type TilkommenInntektEventEndringerBigDecimalEndring {
    fra: BigDecimal!
    til: BigDecimal!
}

type TilkommenInntektEventEndringerDatoPeriodeEndring {
    fra: DatoPeriode!
    til: DatoPeriode!
}

type TilkommenInntektEventEndringerListLocalDateEndring {
    fra: [LocalDate!]!
    til: [LocalDate!]!
}

type TilkommenInntektEventEndringerStringEndring {
    fra: String!
    til: String!
}

type TilkommenInntektEventMetadata {
    notatTilBeslutter: String!
    sekvensnummer: Int!
    tidspunkt: LocalDateTime!
    utfortAvSaksbehandlerIdent: String!
}

type TilkommenInntektFjernetEvent implements TilkommenInntektEvent {
    metadata: TilkommenInntektEventMetadata!
}

type TilkommenInntektGjenopprettetEvent implements TilkommenInntektEvent {
    endringer: TilkommenInntektEventEndringer!
    metadata: TilkommenInntektEventMetadata!
}

type TilkommenInntektOpprettetEvent implements TilkommenInntektEvent {
    ekskluderteUkedager: [LocalDate!]!
    metadata: TilkommenInntektEventMetadata!
    organisasjonsnummer: String!
    periode: DatoPeriode!
    periodebelop: BigDecimal!
}

type TilkommenInntektskilde {
    inntekter: [TilkommenInntekt!]!
    organisasjonsnummer: String!
}

extend type Query {
    restGetAktiveSaksbehandlere: [AktivSaksbehandler!]!
    restGetOppgaver(erPaaVent: Boolean, erTildelt: Boolean, ingenAvEgenskapene: String, minstEnAvEgenskapene: [String!], sidestoerrelse: Int, sidetall: Int, sorteringsfelt: OppgaveSorteringsfelt, sorteringsrekkefoelge: Sorteringsrekkefolge, tildeltTilOid: UUID): OppgaveProjeksjonSide!
    restGetPersonTilkomneInntektskilder(aktorId: String!): [TilkommenInntektskilde!]!
}

extend type Mutation {
    restPostOpphevStans(input: PostOpphevStansRequestBody!): Boolean!
    restPostTilkommenInntektEndre(tilkommenInntektId: UUID!, input: PostTilkommenInntektEndreRequestBody!): Boolean!
    restPostTilkommenInntektFjern(tilkommenInntektId: UUID!, input: PostTilkommenInntektFjernRequestBody!): Boolean!
    restPostTilkommenInntektGjenopprett(tilkommenInntektId: UUID!, input: PostTilkommenInntektGjenopprettRequestBody!): Boolean!
    restPostTilkomneInntekter(input: PostTilkomneInntekterRequestBody!): LeggTilTilkommenInntektResponse!
}

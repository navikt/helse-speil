name: master

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: install deps
        run: npm install
      - name: build client
        run: npm run build
      - name: build server
        run: npm run build-server
      - name: run e2e-test
        run: npm run e2e-test
      - name: Archive Cypress artifacts
        uses: actions/upload-artifact@v1
        with:
          name: videos
          path: e2e-tests/cypress/videos
      - name: create docker tag
        env:
          DOCKER_IMAGE: docker.pkg.github.com/navikt/helse-speil/speil
        run: |
          echo $DOCKER_IMAGE > .docker_image
          git rev-parse HEAD | cut -c1-7 > .docker_tag
      - name: build docker image
        run: docker build . --pull -t $(cat .docker_image):$(cat .docker_tag)
      - name: push docker image
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin https://docker.pkg.github.com
          docker push $(cat .docker_image):$(cat .docker_tag)
        env:
          DOCKER_USERNAME: ${{ secrets.GH_REPO_USER }}
          DOCKER_PASSWORD: ${{ secrets.GH_REPO_TOKEN }}
      - name: deploy to preprod
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NAV_CLUSTER: dev-fss
          SPEIL_FILE: deploy/speil-preprod.json
          REDIS_FILE: deploy/redis.json
          ALERTS_FILE: deploy/alerts-preprod.json
        run: |
          SPEIL=$(jq '.spec.image = "'$(cat .docker_image)':'$(cat .docker_tag)'"' -c $SPEIL_FILE )
          REDIS=$(jq '' -c $REDIS_FILE)
          ALERTS=$(jq '' -c $ALERTS_FILE)
          DEPLOY_PAYLOAD=$(jq ".payload.kubernetes.resources += [$SPEIL, $REDIS, $ALERTS]" deploy/deployreq.json)
          DEPLOY_PAYLOAD=$(echo $DEPLOY_PAYLOAD | jq '.environment = "'$NAV_CLUSTER'"')
          DEPLOY_PAYLOAD=$(echo $DEPLOY_PAYLOAD | jq '.ref = "'$(cat .docker_tag)'"')
          curl -i -n --fail \
             -X POST \
             -u x-access-token:$GITHUB_TOKEN \
             -d "$DEPLOY_PAYLOAD" \
             -H "Accept: application/vnd.github.ant-man-preview+json" \
             https://api.github.com/repos/$GITHUB_REPOSITORY/deployments
      - name: deploy to prod
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NAV_CLUSTER: prod-fss
          SPEIL_FILE: deploy/speil-prod.json
          REDIS_FILE: deploy/redis.json
          ALERTS_FILE: deploy/alerts-prod.json
        run: |
          SPEIL=$(jq '.spec.image = "'$(cat .docker_image)':'$(cat .docker_tag)'"' -c $SPEIL_FILE )
          REDIS=$(jq '' -c $REDIS_FILE)
          ALERTS=$(jq '' -c $ALERTS_FILE)
          DEPLOY_PAYLOAD=$(jq ".payload.kubernetes.resources += [$SPEIL, $REDIS, $ALERTS]" deploy/deployreq.json)
          DEPLOY_PAYLOAD=$(echo $DEPLOY_PAYLOAD | jq '.environment = "'$NAV_CLUSTER'"')
          DEPLOY_PAYLOAD=$(echo $DEPLOY_PAYLOAD | jq '.ref = "'$(cat .docker_tag)'"')
          curl -i -n --fail \
             -X POST \
             -u x-access-token:$GITHUB_TOKEN \
             -d "$DEPLOY_PAYLOAD" \
             -H "Accept: application/vnd.github.ant-man-preview+json" \
             https://api.github.com/repos/$GITHUB_REPOSITORY/deployments

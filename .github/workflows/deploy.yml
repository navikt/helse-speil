name: master

on:
  push:
    branches:
      - master
      # TODO: Fjerne dette før vi merger inn
      - wip-next

env:
  # TODO: Rename app før vi går i real dev/prod
  APP: speil-next
  TEAM: tbd

jobs:
  test-and-lint:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-npm-deps
        with:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - run: npm run test
      - run: npm run lint

  build-dev:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-npm-deps
        with:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - run: cp envs/.env.dev .env.production
      - run: npm run build
      - name: Upload static files to CDN
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: ${{env.TEAM}}
          source: .next/static
          destination: '/${{ env.APP }}/_next'
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
      - uses: nais/docker-build-push@v0
        name: Build and push image
        id: docker-build-push
        with:
          team: tbd
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          image_suffix: dev
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  build-production:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest-16-cores
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-npm-deps
        with:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - run: cp envs/.env.production .env.production
      - run: npm run build
      - name: Upload static files to CDN
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: ${{env.TEAM}}
          source: .next/static
          destination: '/${{ env.APP }}/_next'
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
      - uses: nais/docker-build-push@v0
        name: Build and push image
        id: docker-build-push
        with:
          team: tbd
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          image_suffix: prod
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev
    needs: [build-dev, test-and-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev.yml,deploy/alerts-dev.yml
          VAR: 'image=${{ needs.build-dev.outputs.image }},team=${{env.TEAM}},app=${{env.APP}}'

  deploy-prod:
    name: Deploy to prod
    needs: [build-production, test-and-lint]
    runs-on: ubuntu-latest
    # TODO: Enable denne
    # if: github.ref == 'refs/heads/master'
    if: false
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/prod.yml,deploy/alerts-prod.yml
          VAR: 'image=${{ needs.build-dev.outputs.image }},team=${{env.TEAM}},app=${{env.APP}}'

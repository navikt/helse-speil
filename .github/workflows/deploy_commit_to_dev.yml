name: deploy specific commit to dev

on:
  workflow_dispatch:
    inputs:
      commitHash:
        description: 'SHA of the commit to deploy'
        required: true

env:
  APP: speil
  TEAM: tbd

jobs:
  set_version:
    runs-on: ubuntu-latest
    steps:
      - name: create docker tag
        run: echo "TAG=$(echo ${{ github.event.inputs.commitHash }} | cut -c1-7)" >> $GITHUB_ENV
    outputs:
      tag: ${{ env.TAG }}

  build:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest-16-cores
    needs: set_version
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.set_version.outputs.tag }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - name: Set timezone
        run: export TZ=utc
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Get jest cache directory
        run: |
          jest_command=node_modules/jest-cli/bin/jest.js # fordi Ã¥ installere jest med npx tar ti sekunder
          echo "jest_cache_dir=$($jest_command --showConfig | jq -r '.configs[0].cacheDirectory')" >> $GITHUB_ENV
      - name: Cache jest
        id: cache-jest
        uses: actions/cache@v4
        with:
          path: ${{ env.jest_cache_dir }}
          key: ${{ runner.os }}-jest-${{ hashFiles('packages/backend/jest.config.js', 'packages/frontend/jest.config.js') }}
          restore-keys: ${{ runner.os }}-jest-
      - name: Test
        run: npm run test-ci
      - name: Build app
        run: npm run build
      - name: Remove dev dependencies
        run: |
          npm prune --omit=dev
      - uses: nais/docker-build-push@v0
        name: Build and push image
        id: docker-build-push
        with:
          team: tbd
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deployDev:
    name: Deploy to dev
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.set_version.outputs.tag }}
      - uses: nais/deploy/actions/deploy@v2
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev.yml,deploy/alerts-dev.yml
          VAR: "image=${{ needs.build.outputs.image }},team=${{env.TEAM}},app=${{env.APP}}"
